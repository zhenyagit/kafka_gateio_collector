version: 2
jobs:
  docker_build_and_push_dev:
    docker:
      - image: cimg/go:1.17
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    resource_class: small
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run:
          name: Build Docker image
          command: |
            TAG=1.0.$CIRCLE_BUILD_NUM
            docker build -t $DOCKERHUB_USER/$CIRCLE_PROJECT_REPONAME:$TAG -t $DOCKERHUB_USER/$CIRCLE_PROJECT_REPONAME:dev_latest .
      - run:
          name: Push application Docker image
          command: |
            docker login -u "${DOCKERHUB_USER}" -p "${DOCKERHUB_PASSWORD}"
            docker push --all-tags $DOCKERHUB_USER/$CIRCLE_PROJECT_REPONAME


  docker_build_and_push_release:
    docker:
      - image: cimg/go:1.17
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    resource_class: small
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run:
          name: Build Docker image
          command: |
            TAG=1.0.$CIRCLE_BUILD_NUM
            docker build -t $DOCKERHUB_USER/$CIRCLE_PROJECT_REPONAME:$TAG -t $DOCKERHUB_USER/$CIRCLE_PROJECT_REPONAME:latest .
      - run:
          name: Push application Docker image
          command: |
            docker login -u "${DOCKERHUB_USER}" -p "${DOCKERHUB_PASSWORD}"
            docker push --all-tags $DOCKERHUB_USER/$CIRCLE_PROJECT_REPONAME


  run_dev:
    machine:
      enabled: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - "${SSH_FINGERPRINT}"
      - checkout
      - run:
          name: Setup SSH
          command: |
            ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts
      - run:
          name: Deploy Over SSH
          command: |
            ssh $SSH_USER@$SSH_HOST "
              cd ~/Documents &&
              if [ ! -d "$CIRCLE_PROJECT_REPONAME" ] ; then
                  git clone https://github.com/$GITHUB_USER/$CIRCLE_PROJECT_REPONAME.git
              else
                  cd "$CIRCLE_PROJECT_REPONAME"
                  git pull https://github.com/$GITHUB_USER/$CIRCLE_PROJECT_REPONAME.git
              fi
            "
            ssh $SSH_USER@$SSH_HOST "  
              cd ~/Documents/$CIRCLE_PROJECT_REPONAME
              git checkout -b ${CIRCLE_BRANCH}
            "
            ssh $SSH_USER@$SSH_HOST "  
              cd ~/Documents/$CIRCLE_PROJECT_REPONAME
              docker-compose -f ./docker-compose-dev.yml pull
              docker-compose -f ./docker-compose-dev.yml -p dev up -d --remove-orphans
              docker image prune
            "
              

  deploy:
    machine:
      enabled: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - "${SSH_FINGERPRINT}"
      - checkout
      - run:
          name: Setup SSH
          command: |
            ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts
      - run:
          name: Deploy Over SSH
          command: |
            ssh $SSH_USER@$SSH_HOST "
              cd ~/Documents &&
              if [ ! -d "$CIRCLE_PROJECT_REPONAME" ] ; then
                  git clone https://github.com/$GITHUB_USER/$CIRCLE_PROJECT_REPONAME.git
              else
                  cd "$CIRCLE_PROJECT_REPONAME"
                  git pull https://github.com/$GITHUB_USER/$CIRCLE_PROJECT_REPONAME.git
              fi
            "
            ssh $SSH_USER@$SSH_HOST "  
              cd ~/Documents/$CIRCLE_PROJECT_REPONAME
              docker-compose pull
              docker-compose up -d --remove-orphans
              docker image prune
            "
            
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - docker_build_and_push_dev:
          filters:
            branches:
              only: /dev*/
      - docker_build_and_push_release:
          filters:
            branches:
              only: master
#      - run_dev:
#          requires:
#            - docker_build_and_push_dev
#          filters:
#            branches:
#              only: /dev*/
      - deploy:
          requires:
            - docker_build_and_push_release
          filters:
            branches:
              only: master
